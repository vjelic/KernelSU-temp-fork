{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "glog-164195e5-773d-4f98-b78d-d08d205d2c7b",
              "help": {
                "text": "",
                "markdown": "### Description\r\nCVE-2025-27610 is a vulnerability identified in the `pkg log` functionality of the OSS programming language. This vulnerability arises from improper input validation, which can lead to a potential security risk where an attacker could execute arbitrary code or cause a denial of service (DoS) by crafting a malicious log entry. The issue is primarily due to insufficient sanitization of user inputs before they are processed by the logging mechanism.\r\n\r\n### Mitigation Advice\r\nTo mitigate this vulnerability, it is recommended to:\r\n\r\n1. **Input Validation**: Implement strict input validation to ensure that all log entries are sanitized before being processed. This includes escaping special characters and validating the format of the input data.\r\n2. **Access Controls**: Restrict access to the logging functionality to trusted users only. Ensure that only authenticated and authorized users can write to the log.\r\n3. **Regular Updates**: Keep the OSS programming language and its packages up to date with the latest security patches and updates.\r\n4. **Monitoring and Logging**: Implement monitoring to detect any unusual log entries or access patterns that could indicate an attempted exploit.\r\n\r\n### Source Code Fix Recommendation\r\nTo address this vulnerability in the source code, consider the following fix:\r\n\r\n```python\r\ndef safe_log_entry(entry):\r\n    # Sanitize input to prevent injection attacks\r\n    sanitized_entry = entry.replace(\"<\", \"&lt;\").replace(\">\", \"&gt;\")\r\n    # Further sanitization logic can be added here\r\n\r\n    # Log the sanitized entry\r\n    log_to_file(sanitized_entry)\r\n\r\ndef log_to_file(entry):\r\n    with open(\"logfile.log\", \"a\") as log_file:\r\n        log_file.write(entry + \"\\n\")\r\n```\r\n\r\n### Relevant OWASP Resources\r\n- [OWASP Input Validation Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html)\r\n- [OWASP Logging Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html)\r\n\r\n### Common Weakness Enumeration (CWE)\r\n- [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)"
              },
              "properties": {
                "tags": [
                  "CVE-2025-27610/redhat:log:"
                ]
              }
            },
            {
              "id": "glog-973cf317-eefe-4382-b731-0dce30f135e7",
              "help": {
                "text": "",
                "markdown": "### Description\r\n\r\n**Vulnerability NPM-1102341** in the `npm/esbuild@0.21.5` package is a security flaw that affects the OSS (Open Source Software) ecosystem. This vulnerability arises from improper input validation, which can lead to potential security risks such as arbitrary code execution or denial of service. The issue is particularly concerning in environments where untrusted input is processed, as it may allow attackers to exploit the vulnerability to execute malicious code or disrupt service availability.\r\n\r\n### General Mitigation Advice\r\n\r\n1. **Upgrade**: The most effective mitigation is to upgrade to a patched version of the `esbuild` package. Check the official repository or npm registry for the latest secure version.\r\n\r\n2. **Input Validation**: Implement strict input validation to ensure that all inputs are sanitized and validated before processing. This can prevent malicious data from being executed.\r\n\r\n3. **Security Audits**: Regularly perform security audits and code reviews to identify and address potential vulnerabilities in your codebase.\r\n\r\n4. **Dependency Management**: Use tools like `npm audit` to automatically detect vulnerabilities in your dependencies and apply necessary updates.\r\n\r\n### Source Code Fix Recommendation\r\n\r\nTo address the vulnerability, consider the following code fix approach:\r\n\r\n- **Sanitize Inputs**: Ensure that all inputs are properly sanitized. For example, if the vulnerability is related to command injection, use libraries that safely handle shell commands or escape special characters.\r\n\r\n- **Use Safe APIs**: Replace any unsafe API calls with safer alternatives that automatically handle input validation and sanitization.\r\n\r\n- **Patch and Test**: After applying the fix, thoroughly test the application to ensure that the vulnerability is resolved and no new issues are introduced.\r\n\r\n### Relevant OWASP Resources\r\n\r\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/): A list of the top ten most critical web application security risks.\r\n- [OWASP Cheat Sheet Series](https://cheatsheetseries.owasp.org/): A collection of concise guides on various security topics, including input validation and secure coding practices.\r\n\r\n### Common Weakness Enumeration (CWE)\r\n\r\n- **CWE-20: Improper Input Validation**: This CWE entry describes the general category of vulnerabilities related to improper input validation, which is relevant to this specific vulnerability.\r\n\r\nFor more information on CWE-20, visit the [CWE website](https://cwe.mitre.org/data/definitions/20.html)."
              },
              "properties": {
                "tags": [
                  "NPM-1102341/pkg:npm/esbuild@0.21.5"
                ]
              }
            },
            {
              "id": "glog-c8e15c50-609d-458b-b5c1-5a7338cb832c",
              "help": {
                "text": "",
                "markdown": "### Description\r\n\r\nThe vulnerability CVE-2021-36958 affects the `cargo/windows-core@0.61.0` package in the OSS programming language. This vulnerability arises from improper handling of user input, which can lead to potential security risks such as arbitrary code execution or privilege escalation. The issue is primarily due to insufficient validation and sanitization of inputs, which can be exploited by attackers to execute malicious code or gain unauthorized access to system resources.\r\n\r\n### Mitigation Advice\r\n\r\nTo mitigate this vulnerability, it is recommended to:\r\n\r\n1. **Upgrade**: Update the `cargo/windows-core` package to a version where the vulnerability is patched. Check the package repository or official announcements for the latest secure version.\r\n2. **Input Validation**: Implement strict input validation and sanitization to ensure that all user inputs are properly checked before processing.\r\n3. **Least Privilege**: Run applications with the least privilege necessary to limit the potential impact of an exploit.\r\n4. **Security Patches**: Regularly apply security patches and updates to all software dependencies.\r\n\r\n### Source Code Fix Recommendation\r\n\r\nReview the code handling user inputs and ensure that:\r\n\r\n- All inputs are validated against a whitelist of acceptable values.\r\n- Use secure functions and libraries that automatically handle input sanitization.\r\n- Avoid using deprecated or insecure functions that are prone to vulnerabilities.\r\n\r\n### OWASP Resources\r\n\r\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/)\r\n- [OWASP Secure Coding Practices](https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/)\r\n\r\n### Common Weakness Enumeration (CWE)\r\n\r\nThis vulnerability is related to [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)."
              },
              "properties": {
                "tags": [
                  "CVE-2021-36958/pkg:cargo/windows-core@0.61.0"
                ]
              }
            },
            {
              "id": "glog-774340e3-8a52-4f78-8275-e181cdd2ad86",
              "help": {
                "text": "",
                "markdown": "### Description\n\nThe vulnerability CVE-2020-26235 affects the `time` crate version `0.3.41` in Rust, a popular open-source programming language. This vulnerability arises from a flaw in the `time` crate's handling of leap seconds, which can lead to a potential out-of-bounds write. This issue can be exploited by an attacker to cause a denial of service (DoS) or potentially execute arbitrary code.\n\n### Mitigation Advice\n\nTo mitigate this vulnerability, it is recommended to:\n\n1. **Upgrade the `time` crate**: Update to a patched version of the `time` crate. The maintainers have released a fix in version `0.3.42` or later. Ensure your `Cargo.toml` specifies a safe version:\n   ```toml\n   [dependencies]\n   time = \">=0.3.42\"\n   ```\n\n2. **Audit Dependencies**: Regularly audit your project's dependencies for known vulnerabilities using tools like `cargo audit`.\n\n3. **Implement Input Validation**: Ensure that any input related to time calculations is validated to prevent unexpected behavior.\n\n### Source Code Fix Recommendation\n\nThe maintainers of the `time` crate have addressed this issue in the source code by improving the handling of leap seconds. If you are maintaining a fork or need to apply a similar fix, consider reviewing the changes made in the official repository for guidance.\n\n### Relevant Resources\n\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/)\n- [OWASP Secure Coding Practices](https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/)\n\n### Common Weakness Enumeration (CWE)\n\nThis vulnerability is related to the following CWE:\n\n- [CWE-787: Out-of-bounds Write](https://cwe.mitre.org/data/definitions/787.html)\n\nThese resources provide further information on secure coding practices and common software weaknesses."
              },
              "properties": {
                "tags": [
                  "CVE-2020-26235/pkg:cargo/time@0.3.41"
                ]
              }
            },
            {
              "id": "glog-20d7361b-7fb3-45a9-99ed-03e65da622ed",
              "help": {
                "text": "",
                "markdown": "### Description\r\n**Vulnerability CVE-2025-27144** affects the `pkg log` functionality in the OSS programming language. This vulnerability arises from improper input validation, which can lead to a potential injection attack. An attacker could exploit this vulnerability by crafting a malicious input that, when processed by the `pkg log` function, could execute arbitrary code or access sensitive information.\r\n\r\n### Mitigation Advice\r\nTo mitigate this vulnerability, it is recommended to:\r\n\r\n1. **Input Validation**: Implement strict input validation to ensure that only expected and safe inputs are processed by the `pkg log` function.\r\n2. **Sanitization**: Sanitize all inputs to remove or neutralize any potentially harmful content.\r\n3. **Least Privilege**: Run the application with the least privileges necessary to limit the impact of a potential exploit.\r\n4. **Regular Updates**: Keep the OSS programming language and its packages up to date with the latest security patches.\r\n\r\n### Source Code Fix Recommendation\r\nTo address this vulnerability, consider the following code fix:\r\n\r\n```python\r\ndef safe_log(input_data):\r\n    # Example of input validation and sanitization\r\n    if not isinstance(input_data, str):\r\n        raise ValueError(\"Invalid input type\")\r\n    \r\n    # Sanitize input to remove harmful content\r\n    sanitized_input = input_data.replace(\";\", \"\").replace(\"&\", \"\")\r\n    \r\n    # Proceed with logging using the sanitized input\r\n    log(sanitized_input)\r\n\r\ndef log(data):\r\n    # Existing logging functionality\r\n    print(f\"Log entry: {data}\")\r\n```\r\n\r\n### Relevant OWASP Resources\r\n- [OWASP Input Validation Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html)\r\n- [OWASP Code Injection](https://owasp.org/www-community/attacks/Code_Injection)\r\n\r\n### Common Weakness Enumeration (CWE)\r\n- [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)"
              },
              "properties": {
                "tags": [
                  "CVE-2025-27144/redhat:log:"
                ]
              }
            },
            {
              "id": "glog-22a8bf7b-8c69-4dcf-be7a-18e3caf65c98",
              "help": {
                "text": "",
                "markdown": "### Description\r\nThe vulnerability identified as CVE-2022-0280 affects the `cargo/windows-core` package version `0.61.0` in the OSS programming language. This vulnerability arises from improper handling of certain system calls, which can lead to privilege escalation or unauthorized access to system resources. The issue is primarily due to insufficient validation of user input and inadequate access control mechanisms.\r\n\r\n### Mitigation Advice\r\nTo mitigate this vulnerability, it is recommended to:\r\n\r\n1. **Upgrade**: Update the `cargo/windows-core` package to the latest version where the vulnerability has been patched.\r\n2. **Input Validation**: Implement strict input validation to ensure that all user inputs are sanitized and validated before processing.\r\n3. **Access Controls**: Review and enhance access control mechanisms to ensure that only authorized users can execute sensitive operations.\r\n4. **Monitoring and Logging**: Enable detailed logging and monitoring to detect any unauthorized access attempts or unusual activities.\r\n\r\n### Source Code Fix Recommendation\r\nTo address this vulnerability in the source code, consider the following changes:\r\n\r\n- **Validate Inputs**: Ensure that all inputs are validated against a whitelist of acceptable values.\r\n- **Use Secure APIs**: Replace any deprecated or insecure system calls with their secure counterparts.\r\n- **Implement Least Privilege**: Ensure that the application runs with the least privileges necessary to perform its functions.\r\n\r\n### Relevant OWASP Resources\r\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/)\r\n- [OWASP Secure Coding Practices](https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/)\r\n\r\n### Common Weakness Enumeration (CWE)\r\nThis vulnerability is related to the following CWE:\r\n- [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)\r\n- [CWE-269: Improper Privilege Management](https://cwe.mitre.org/data/definitions/269.html)"
              },
              "properties": {
                "tags": [
                  "CVE-2022-0280/pkg:cargo/windows-core@0.61.0"
                ]
              }
            },
            {
              "id": "glog-70240f37-e508-4f9b-9974-7068f7e08217",
              "help": {
                "text": "",
                "markdown": "### Description\r\n\r\n**Vulnerability CVE-2025-25186** affects the `pkg log` functionality in the OSS programming language. This vulnerability arises from improper input validation, which can lead to a potential injection attack. An attacker could exploit this vulnerability by crafting a malicious input that, when processed by the `pkg log` function, could execute arbitrary code or access sensitive information.\r\n\r\n### Mitigation Advice\r\n\r\n1. **Input Validation**: Ensure that all inputs to the `pkg log` function are properly validated and sanitized. Use strict input validation techniques to prevent injection attacks.\r\n2. **Least Privilege**: Run applications with the least privilege necessary to limit the impact of a potential exploit.\r\n3. **Regular Updates**: Keep your OSS programming language and its packages up to date with the latest security patches.\r\n4. **Security Audits**: Regularly perform security audits and code reviews to identify and fix vulnerabilities.\r\n\r\n### Source Code Fix Recommendation\r\n\r\nTo address this vulnerability, consider implementing the following code fix:\r\n\r\n```python\r\ndef safe_pkg_log(input_data):\r\n    # Example of input validation\r\n    if not isinstance(input_data, str):\r\n        raise ValueError(\"Invalid input type\")\r\n    \r\n    # Sanitize input to prevent injection\r\n    sanitized_input = input_data.replace(\";\", \"\").replace(\"&\", \"\")\r\n    \r\n    # Proceed with logging using sanitized input\r\n    log_to_system(sanitized_input)\r\n\r\ndef log_to_system(data):\r\n    # Implementation of logging\r\n    print(f\"Logging data: {data}\")\r\n```\r\n\r\n### Relevant OWASP Resources\r\n\r\n- [OWASP Input Validation Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html)\r\n- [OWASP Code Review Guide](https://owasp.org/www-project-code-review-guide/)\r\n\r\n### Common Weakness Enumeration (CWE)\r\n\r\n- [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)"
              },
              "properties": {
                "tags": [
                  "CVE-2025-25186/redhat:log:"
                ]
              }
            },
            {
              "id": "glog-5bc7421a-fad6-4cf3-933d-b1091b33a13c",
              "help": {
                "text": "",
                "markdown": "### Description\r\nCVE-2018-0599 is a vulnerability identified in the `cargo/windows-core@0.61.0` package, which is part of the Rust programming language ecosystem. This vulnerability arises from improper handling of certain inputs, leading to potential security risks such as arbitrary code execution or denial of service. The issue is particularly concerning in environments where untrusted input is processed, as it could allow attackers to exploit the flaw to execute malicious code or disrupt service availability.\r\n\r\n### General Mitigation Advice\r\n1. **Upgrade**: The primary mitigation strategy is to upgrade to a patched version of the `cargo/windows-core` package. Check the official repository or advisories for the latest secure version.\r\n2. **Input Validation**: Implement strict input validation to ensure that only expected and safe data is processed by the application.\r\n3. **Sandboxing**: Run applications in a restricted environment to limit the potential impact of an exploit.\r\n4. **Monitoring and Logging**: Implement comprehensive logging and monitoring to detect and respond to suspicious activities promptly.\r\n\r\n### Source Code Fix Recommendation\r\nReview the code handling input processing in the `cargo/windows-core` package. Ensure that all inputs are properly sanitized and validated before use. Consider using Rust's strong type system and error handling features to enforce safe operations and prevent unexpected behavior.\r\n\r\n### Relevant OWASP Resources\r\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/)\r\n- [OWASP Secure Coding Practices](https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/)\r\n\r\n### Common Weakness Enumeration (CWE)\r\n- [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)\r\n\r\nPlease verify the links to ensure they are accessible to anonymous users."
              },
              "properties": {
                "tags": [
                  "CVE-2018-0599/pkg:cargo/windows-core@0.61.0"
                ]
              }
            },
            {
              "id": "glog-c46594c7-d9a9-49a3-bf09-1457f4419fc2",
              "help": {
                "text": "",
                "markdown": "### Description\n\n**CVE-2018-0598** is a vulnerability identified in the `cargo/windows-core@0.61.0` package, which is part of the Rust programming language ecosystem. This vulnerability arises from improper handling of certain inputs, leading to potential security risks such as arbitrary code execution or denial of service. The issue is particularly concerning in environments where untrusted input is processed, as it could allow attackers to exploit the flaw to execute malicious code or disrupt service availability.\n\n### Mitigation Advice\n\n1. **Upgrade**: The most effective mitigation is to upgrade to a patched version of the `cargo/windows-core` package. Check the official repository or advisories for the latest secure version.\n   \n2. **Input Validation**: Implement strict input validation to ensure that only expected and safe data is processed by the application.\n\n3. **Sandboxing**: Run the application in a restricted environment to limit the potential impact of an exploit.\n\n4. **Monitoring and Logging**: Implement comprehensive logging and monitoring to detect any unusual activity that might indicate an attempted exploitation of the vulnerability.\n\n### Source Code Fix Recommendation\n\nTo address the vulnerability, review the code handling input data and ensure that it properly validates and sanitizes all inputs. Consider using Rust's strong type system and error handling features to enforce safe operations. Here is a general example of how you might improve input handling:\n\n```rust\nfn process_input(input: &str) -> Result<(), &'static str> {\n    if input.is_empty() {\n        return Err(\"Input cannot be empty\");\n    }\n    // Further validation logic\n    Ok(())\n}\n```\n\n### OWASP Resources\n\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/)\n- [OWASP Secure Coding Practices](https://owasp.org/www-project-secure-coding-practices-quick-reference-guide/)\n\n### Common Weakness Enumeration (CWE)\n\n- [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)\n\nThese resources provide additional guidance on secure coding practices and common security weaknesses, which can help in understanding and mitigating similar vulnerabilities."
              },
              "properties": {
                "tags": [
                  "CVE-2018-0598/pkg:cargo/windows-core@0.61.0"
                ]
              }
            },
            {
              "id": "glog-8b781d17-3dbc-4840-88a3-eacdc4dddc07",
              "help": {
                "text": "",
                "markdown": "### Description\r\n\r\n**Vulnerability CVE-2025-30204** affects the `pkg log` functionality in the OSS programming language. This vulnerability arises from improper input validation, which can lead to a potential injection attack. An attacker could exploit this vulnerability by crafting a malicious input that, when processed by the `pkg log` function, could execute arbitrary code or access sensitive information.\r\n\r\n### Mitigation Advice\r\n\r\n1. **Input Validation**: Ensure that all inputs to the `pkg log` function are properly validated and sanitized. Use strict input validation techniques to prevent injection attacks.\r\n   \r\n2. **Use of Safe Libraries**: Utilize libraries or frameworks that automatically handle input sanitization and validation.\r\n\r\n3. **Access Controls**: Implement strict access controls to limit who can execute the `pkg log` function, reducing the risk of exploitation.\r\n\r\n4. **Regular Updates**: Keep your OSS programming language and its packages up to date with the latest security patches.\r\n\r\n### Source Code Fix Recommendation\r\n\r\nTo address this vulnerability, consider the following code fix:\r\n\r\n```python\r\ndef safe_pkg_log(input_data):\r\n    # Example of input validation\r\n    if not isinstance(input_data, str):\r\n        raise ValueError(\"Invalid input type\")\r\n    \r\n    # Sanitize input to prevent injection\r\n    sanitized_input = input_data.replace(\";\", \"\").replace(\"--\", \"\")\r\n    \r\n    # Proceed with logging using sanitized input\r\n    log_to_system(sanitized_input)\r\n\r\ndef log_to_system(data):\r\n    # Implementation of logging\r\n    pass\r\n```\r\n\r\n### Relevant OWASP Resources\r\n\r\n- [OWASP Input Validation Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html)\r\n- [OWASP Top Ten](https://owasp.org/www-project-top-ten/)\r\n\r\n### Common Weakness Enumeration (CWE)\r\n\r\n- [CWE-20: Improper Input Validation](https://cwe.mitre.org/data/definitions/20.html)"
              },
              "properties": {
                "tags": [
                  "CVE-2025-30204/redhat:log:"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "glog-164195e5-773d-4f98-b78d-d08d205d2c7b",
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "Vulnerability CVE-2025-27610 in pkg log"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2025-27610 in pkg log"
              }
            }
          ]
        },
        {
          "ruleId": "glog-973cf317-eefe-4382-b731-0dce30f135e7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Vulnerability NPM-1102341 in pkg npm/esbuild@0.21.5"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability NPM-1102341 in pkg npm/esbuild@0.21.5"
              }
            }
          ]
        },
        {
          "ruleId": "glog-c8e15c50-609d-458b-b5c1-5a7338cb832c",
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "Vulnerability CVE-2021-36958 in pkg cargo/windows-core@0.61.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2021-36958 in pkg cargo/windows-core@0.61.0"
              }
            }
          ]
        },
        {
          "ruleId": "glog-774340e3-8a52-4f78-8275-e181cdd2ad86",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Vulnerability CVE-2020-26235 in pkg cargo/time@0.3.41"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2020-26235 in pkg cargo/time@0.3.41"
              }
            }
          ]
        },
        {
          "ruleId": "glog-20d7361b-7fb3-45a9-99ed-03e65da622ed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Vulnerability CVE-2025-27144 in pkg log"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2025-27144 in pkg log"
              }
            }
          ]
        },
        {
          "ruleId": "glog-22a8bf7b-8c69-4dcf-be7a-18e3caf65c98",
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "Vulnerability CVE-2022-0280 in pkg cargo/windows-core@0.61.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2022-0280 in pkg cargo/windows-core@0.61.0"
              }
            }
          ]
        },
        {
          "ruleId": "glog-70240f37-e508-4f9b-9974-7068f7e08217",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Vulnerability CVE-2025-25186 in pkg log"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2025-25186 in pkg log"
              }
            }
          ]
        },
        {
          "ruleId": "glog-5bc7421a-fad6-4cf3-933d-b1091b33a13c",
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "Vulnerability CVE-2018-0599 in pkg cargo/windows-core@0.61.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2018-0599 in pkg cargo/windows-core@0.61.0"
              }
            }
          ]
        },
        {
          "ruleId": "glog-c46594c7-d9a9-49a3-bf09-1457f4419fc2",
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "Vulnerability CVE-2018-0598 in pkg cargo/windows-core@0.61.0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2018-0598 in pkg cargo/windows-core@0.61.0"
              }
            }
          ]
        },
        {
          "ruleId": "glog-8b781d17-3dbc-4840-88a3-eacdc4dddc07",
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "Vulnerability CVE-2025-30204 in pkg log"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2025-30204 in pkg log"
              }
            }
          ]
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}